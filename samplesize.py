import cgi
import webapp2
import math

head = """\
        <!DOCTYPE html>
        <html lang="en">
          <head>
          <script type="text/javascript">

              var _gaq = _gaq || [];
              _gaq.push(['_setAccount', 'UA-46782620-1']);
              _gaq.push(['_trackPageview']);

              (function() {
                var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
                ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
                var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
              })();

            </script>
            <link rel="icon" href="http://www.steven.ae/favicon.png" type="image/png">
            <title>Survey Sample Size Calculator</title>
            <meta name="description" content="Guide and calculator for survey sample size for statistical significance."> 

            <link rel="stylesheet" type="text/css" href="/stylesheets/self.css">
          </head>

          <body>
            <a href="http://www.steven.ae"><img id="logo" src="http://www.steven.ae/ideographic_description_character_overlaid.svg" type="image/svg+xml">
</img></a>
            <div id="wrapdiv">
                <h1 style="text-align:center">A Large-Enough Sample Size for Statistical Significance</h1>
          """

foot = """
          <br><br><h3 style="text-align:center">from <a href="http://www.steven.ae">Steven Ellis</a></h3>
          </div>


          </body>
        </html>
        """

p_to_z = dict(zip(
        [50.0,50.1,50.2,50.3,50.4,50.5,50.6,50.7,50.8,50.9,51.0,51.1,51.2,51.3,51.4,51.5,51.6,51.7,51.8,51.9,52.0,52.1,52.2,52.3,52.4,52.5,52.6,52.7,52.8,52.9,53.0,53.1,
        53.2,53.3,53.4,53.5,53.6,53.7,53.8,53.9,54.0,54.1,54.2,54.3,54.4,54.5,54.6,54.7,54.8,54.9,55.0,55.1,55.2,55.3,55.4,55.5,55.6,55.7,55.8,55.9,56.0,56.1,56.2,56.3,
        56.4,56.5,56.6,56.7,56.8,56.9,57.0,57.1,57.2,57.3,57.4,57.5,57.6,57.7,57.8,57.9,58.0,58.1,58.2,58.3,58.4,58.5,58.6,58.7,58.8,58.9,59.0,59.1,59.2,59.3,59.4,59.5,
        59.6,59.7,59.8,59.9,60.0,60.1,60.2,60.3,60.4,60.5,60.6,60.7,60.8,60.9,61.0,61.1,61.2,61.3,61.4,61.5,61.6,61.7,61.8,61.9,62.0,62.1,62.2,62.3,62.4,62.5,62.6,62.7,
        62.8,62.9,63.0,63.1,63.2,63.3,63.4,63.5,63.6,63.7,63.8,63.9,64.0,64.1,64.2,64.3,64.4,64.5,64.6,64.7,64.8,64.9,65.0,65.1,65.2,65.3,65.4,65.5,65.6,65.7,65.8,65.9,
        66.0,66.1,66.2,66.3,66.4,66.5,66.6,66.7,66.8,66.9,67.0,67.1,67.2,67.3,67.4,67.5,67.6,67.7,67.8,67.9,68.0,68.1,68.2,68.3,68.4,68.5,68.6,68.7,68.8,68.9,69.0,69.1,
        69.2,69.3,69.4,69.5,69.6,69.7,69.8,69.9,70.0,70.1,70.2,70.3,70.4,70.5,70.6,70.7,70.8,70.9,71.0,71.1,71.2,71.3,71.4,71.5,71.6,71.7,71.8,71.9,72.0,72.1,72.2,72.3,
        72.4,72.5,72.6,72.7,72.8,72.9,73.0,73.1,73.2,73.3,73.4,73.5,73.6,73.7,73.8,73.9,74.0,74.1,74.2,74.3,74.4,74.5,74.6,74.7,74.8,74.9,75.0,75.1,75.2,75.3,75.4,75.5,
        75.6,75.7,75.8,75.9,76.0,76.1,76.2,76.3,76.4,76.5,76.6,76.7,76.8,76.9,77.0,77.1,77.2,77.3,77.4,77.5,77.6,77.7,77.8,77.9,78.0,78.1,78.2,78.3,78.4,78.5,78.6,78.7,
        78.8,78.9,79.0,79.1,79.2,79.3,79.4,79.5,79.6,79.7,79.8,79.9,80.0,80.1,80.2,80.3,80.4,80.5,80.6,80.7,80.8,80.9,81.0,81.1,81.2,81.3,81.4,81.5,81.6,81.7,81.8,81.9,
        82.0,82.1,82.2,82.3,82.4,82.5,82.6,82.7,82.8,82.9,83.0,83.1,83.2,83.3,83.4,83.5,83.6,83.7,83.8,83.9,84.0,84.1,84.2,84.3,84.4,84.5,84.6,84.7,84.8,84.9,85.0,85.1,
        85.2,85.3,85.4,85.5,85.6,85.7,85.8,85.9,86.0,86.1,86.2,86.3,86.4,86.5,86.6,86.7,86.8,86.9,87.0,87.1,87.2,87.3,87.4,87.5,87.6,87.7,87.8,87.9,88.0,88.1,88.2,88.3,
        88.4,88.5,88.6,88.7,88.8,88.9,89.0,89.1,89.2,89.3,89.4,89.5,89.6,89.7,89.8,89.9,90.0,90.1,90.2,90.3,90.4,90.5,90.6,90.7,90.8,90.9,91.0,91.1,91.2,91.3,91.4,91.5,
        91.6,91.7,91.8,91.9,92.0,92.1,92.2,92.3,92.4,92.5,92.6,92.7,92.8,92.9,93.0,93.1,93.2,93.3,93.4,93.5,93.6,93.7,93.8,93.9,94.0,94.1,94.2,94.3,94.4,94.5,94.6,94.7,
        94.8,94.9,95.0,95.1,95.2,95.3,95.4,95.5,95.6,95.7,95.8,95.9,96.0,96.1,96.2,96.3,96.4,96.5,96.6,96.7,96.8,96.9,97.0,97.1,97.2,97.3,97.4,97.5,97.6,97.7,97.8,97.9,
        98.0,98.1,98.2,98.3,98.4,98.5,98.6,98.7,98.8,98.9,99.0,99.1,99.2,99.3,99.4,99.5,99.6,99.7,99.8,99.9],

        [0.0000,0.0025,0.0050,0.0075,0.0100,0.0125,0.0150,0.0175,0.0201,0.0226,
        0.0251,0.0276,0.0301,0.0326,0.0351,0.0376,0.0401,0.0426,0.0451,0.0476,
        0.0502,0.0527,0.0552,0.0577,0.0602,0.0627,0.0652,0.0677,0.0702,0.0728,
        0.0753,0.0778,0.0803,0.0828,0.0853,0.0878,0.0904,0.0929,0.0954,0.0979,
        0.1004,0.1030,0.1055,0.1080,0.1105,0.1130,0.1156,0.1181,0.1206,0.1231,
        0.1257,0.1282,0.1307,0.1332,0.1358,0.1383,0.1408,0.1434,0.1459,0.1484,
        0.1510,0.1535,0.1560,0.1586,0.1611,0.1637,0.1662,0.1687,0.1713,0.1738,
        0.1764,0.1789,0.1815,0.1840,0.1866,0.1891,0.1917,0.1942,0.1968,0.1993,
        0.2019,0.2045,0.2070,0.2096,0.2121,0.2147,0.2173,0.2198,0.2224,0.2250,
        0.2275,0.2301,0.2327,0.2353,0.2378,0.2404,0.2430,0.2456,0.2482,0.2508,
        0.2533,0.2559,0.2585,0.2611,0.2637,0.2663,0.2689,0.2715,0.2741,0.2767,
        0.2793,0.2819,0.2845,0.2871,0.2898,0.2924,0.2950,0.2976,0.3002,0.3029,
        0.3055,0.3081,0.3107,0.3134,0.3160,0.3186,0.3213,0.3239,0.3266,0.3292,
        0.3319,0.3345,0.3372,0.3398,0.3425,0.3451,0.3478,0.3505,0.3531,0.3558,
        0.3585,0.3611,0.3638,0.3665,0.3692,0.3719,0.3745,0.3772,0.3799,0.3826,
        0.3853,0.3880,0.3907,0.3934,0.3961,0.3989,0.4016,0.4043,0.4070,0.4097,
        0.4125,0.4152,0.4179,0.4207,0.4234,0.4261,0.4289,0.4316,0.4344,0.4372,
        0.4399,0.4427,0.4454,0.4482,0.4510,0.4538,0.4565,0.4593,0.4621,0.4649,
        0.4677,0.4705,0.4733,0.4761,0.4789,0.4817,0.4845,0.4874,0.4902,0.4930,
        0.4959,0.4987,0.5015,0.5044,0.5072,0.5101,0.5129,0.5158,0.5187,0.5215,
        0.5244,0.5273,0.5302,0.5330,0.5359,0.5388,0.5417,0.5446,0.5476,0.5505,
        0.5534,0.5563,0.5592,0.5622,0.5651,0.5681,0.5710,0.5740,0.5769,0.5799,
        0.5828,0.5858,0.5888,0.5918,0.5948,0.5978,0.6008,0.6038,0.6068,0.6098,
        0.6128,0.6158,0.6189,0.6219,0.6250,0.6280,0.6311,0.6341,0.6372,0.6403,
        0.6433,0.6464,0.6495,0.6526,0.6557,0.6588,0.6620,0.6651,0.6682,0.6713,
        0.6745,0.6776,0.6808,0.6840,0.6871,0.6903,0.6935,0.6967,0.6999,0.7031,
        0.7063,0.7095,0.7128,0.7160,0.7192,0.7225,0.7257,0.7290,0.7323,0.7356,
        0.7388,0.7421,0.7454,0.7488,0.7521,0.7554,0.7588,0.7621,0.7655,0.7688,
        0.7722,0.7756,0.7790,0.7824,0.7858,0.7892,0.7926,0.7961,0.7995,0.8030,
        0.8064,0.8099,0.8134,0.8169,0.8204,0.8239,0.8274,0.8310,0.8345,0.8381,
        0.8416,0.8452,0.8488,0.8524,0.8560,0.8596,0.8633,0.8669,0.8705,0.8742,
        0.8779,0.8816,0.8853,0.8890,0.8927,0.8965,0.9002,0.9040,0.9078,0.9116,
        0.9154,0.9192,0.9230,0.9269,0.9307,0.9346,0.9385,0.9424,0.9463,0.9502,
        0.9542,0.9581,0.9621,0.9661,0.9701,0.9741,0.9782,0.9822,0.9863,0.9904,
        0.9945,0.9986,1.0027,1.0069,1.0110,1.0152,1.0194,1.0237,1.0279,1.0322,
        1.0364,1.0407,1.0450,1.0494,1.0537,1.0581,1.0625,1.0669,1.0714,1.0758,
        1.0803,1.0848,1.0893,1.0939,1.0985,1.1031,1.1077,1.1123,1.1170,1.1217,
        1.1264,1.1311,1.1359,1.1407,1.1455,1.1503,1.1552,1.1601,1.1650,1.1700,
        1.1750,1.1800,1.1850,1.1901,1.1952,1.2004,1.2055,1.2107,1.2160,1.2212,
        1.2265,1.2319,1.2372,1.2426,1.2481,1.2536,1.2591,1.2646,1.2702,1.2759,
        1.2816,1.2873,1.2930,1.2988,1.3047,1.3106,1.3165,1.3225,1.3285,1.3346,
        1.3408,1.3469,1.3532,1.3595,1.3658,1.3722,1.3787,1.3852,1.3917,1.3984,
        1.4051,1.4118,1.4187,1.4255,1.4325,1.4395,1.4466,1.4538,1.4611,1.4684,
        1.4758,1.4833,1.4909,1.4985,1.5063,1.5141,1.5220,1.5301,1.5382,1.5464,
        1.5548,1.5632,1.5718,1.5805,1.5893,1.5982,1.6072,1.6164,1.6258,1.6352,
        1.6449,1.6546,1.6646,1.6747,1.6849,1.6954,1.7060,1.7169,1.7279,1.7392,
        1.7507,1.7624,1.7744,1.7866,1.7991,1.8119,1.8250,1.8384,1.8522,1.8663,
        1.8808,1.8957,1.9110,1.9268,1.9431,1.9600,1.9774,1.9954,2.0141,2.0335,
        2.0537,2.0749,2.0969,2.1201,2.1444,2.1701,2.1973,2.2262,2.2571,2.2904,
        2.3263,2.3656,2.4089,2.4573,2.5121,2.5758,2.6521,2.7478,2.8782,3.0902]))

MAIN_PAGE_HTML = head + """
    <form action="/size" method="post">
    
    <h2 style="text-align:center"><p>Calculating the required sample size for a survey requires that you pick a minimum difference (aka, "delta") between Yes / No responses to your question(s).
    The best way to decide this delta is to ask yourself (or your stakeholders, or your boss),
    <br><br><i>"What's a large-enough difference in responses that we'll actually make a decision?"</i>
    <br><br>A standard for-profit industry delta is 7%. Each additional sample costs money, and a larger delta requires a lower sample size.
    We'll build off of this <a href="http://www.google.com/insights/consumersurveys/view?survey=m7obdzk6ulwbe&question=2&filter=&rw=1" target="blank">example from Google Consumer Surveys</a>, fill in your own delta and question below:</p></p>
    <hr><p>We want to ask people the yes or no question, <textarea name="control_query" rows="2" cols="50">Is it worth it to pay more for a Mac than a PC with the same specs?</textarea> </p>
    <p>We want to run a survey, and we're going to act on those findings even if the delta from "yes" to "no" responses is only <textarea name="diff" rows="1" cols="1">7</textarea> percentage points</p>
    <p><input type="submit" value="What sample size do I need?" style="font-size:16px"></p>
    </h2>
    </form>

    """ + foot


class MainPage(webapp2.RequestHandler):

    def get(self):
        self.response.write(MAIN_PAGE_HTML)


class samplesize(webapp2.RequestHandler):

    def post(self):

        ci = float(cgi.escape(self.request.get('diff')))/100
        # control_proportion = float(cgi.escape(self.request.get('control_proportion')))/100
        control_proportion = .50
        # confidence = float(cgi.escape(self.request.get('confidence')))
        confidence = 95
        # the below takes the one-tailed probability and makes it two-tailed
        conf_mod = (100 - confidence)/2
        confidence += conf_mod

        # CI = 1.96 * math.sqrt( (control_proportion-math.pow(control_proportion,2)) / sample-size)
        # CI / 1.96 =  math.sqrt( (control_proportion-math.pow(control_proportion,2)) / sample-size)
        # (CI / 1.96)^2 =  (control_proportion-math.pow(control_proportion,2)) / sample-size
        # sample-size* (CI / 1.96)^2 =  (control_proportion-math.pow(control_proportion,2))
        samplesize = (control_proportion-math.pow(control_proportion,2)) / math.pow((ci / p_to_z[confidence]),2)

        SIZE_PAGE_HTML = head + """
                        <h1 style="text-align:center">You will need:</h1>
                        <h3 style="text-align:center"> """ + str(int(math.ceil(samplesize))) + """ samples </h3>
                        <h2 style="text-align:center"> Now the trick is <a href="http://en.wikipedia.org/wiki/Survey_sampling">getting your sampling right</a>! </h2>
                        """ + foot

        self.response.write(SIZE_PAGE_HTML)


application = webapp2.WSGIApplication([
    ('/', MainPage),
    ('/size', samplesize),
], debug=True)